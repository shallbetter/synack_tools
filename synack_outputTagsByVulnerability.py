import json
import sys
from synack import synack

class synack_tags (object):
    def __init__(self):
        self.synack_tags = synack_tags
        self.id = ""
        self.tags = []

    def json(self):
        return [{
            'id': self.id,
            'tags': self.tags,
        }]

    def to_text(self):
        tempval = "%s,%s" % (self.id, self.tags)
        return tempval

    def headers(self):
        return "id,tags"


'''
Description: main function where program flow begins
Error Handling: the error handling is intentionally minimal.  If any errors are detected, either for input validation reasons or API request reasons, the program will exit.
Inputs: None
Outputs: None
'''
if __name__ == '__main__':
    token = synack.get_api_key(bool(True))
    vulns = synack.get_vulnerabilities(token, "",bool(True))

    stdout = open(sys.__stdout__.fileno(),
                  mode=sys.__stdout__.mode,
                  buffering=1,
                  encoding=sys.__stdout__.encoding,
                  errors=sys.__stdout__.errors,
                  newline='\n',
                  closefd=False)

    synt = synack_tags
    js = synt.json
    for vuln in vulns:
        for tag in vuln['tag_list']:
            writer.writerow(row)